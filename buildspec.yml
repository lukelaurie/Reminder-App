version: 0.2
phases:
    install:
        runtime-versions:
            nodejs: 18
        commands:
            - echo "Installing Node.js dependencies..."
            - npm install

    build:
        commands:
            - echo "Zipping deployment packages..."
            - mkdir lambda_zips
            - mkdir add_new_associate
            - mkdir create_new_appointment
            - mkdir login
            - mkdir retrieve_appointments
            - mkdir send_appointment_reminders
            - mkdir is_logged_in
            - mkdir delete_appointment
            - mkdir retrieve_associate

            - cp sam-app/lambda_functions/add_new_associate/index.mjs add_new_associate/index.mjs
            - cp sam-app/lambda_functions/create_new_appointment/index.mjs create_new_appointment/index.mjs
            - cp sam-app/lambda_functions/login/index.mjs login/index.mjs
            - cp sam-app/lambda_functions/retrieve_appointments/index.mjs retrieve_appointments/index.mjs
            - cp sam-app/lambda_functions/send_appointment_reminders/index.mjs send_appointment_reminders/index.mjs
            - cp sam-app/lambda_functions/is_logged_in/index.mjs is_logged_in/index.mjs
            - cp sam-app/lambda_functions/delete_appointment/index.mjs delete_appointment/index.mjs
            - cp sam-app/lambda_functions/retrieve_associate/index.mjs retrieve_associate/index.mjs
            - cd lambda_zips

            - zip -j -r9 newAssociate.zip ../add_new_associate/index.mjs
            - zip -j -r9 newAppointment.zip ../create_new_appointment/index.mjs
            - zip -j -r9 login.zip ../login/index.mjs
            - zip -j -r9 retrieveAppointments.zip ../retrieve_appointments/index.mjs
            - zip -j -r9 sendAppointmentReminders.zip ../send_appointment_reminders/index.mjs
            - zip -j -r9 isLoggedIn.zip ../is_logged_in/index.mjs
            - zip -j -r9 deleteAppointment.zip ../delete_appointment/index.mjs
            - zip -j -r9 retrieveAssociate.zip ../retrieve_associate/index.mjs

            - echo "Zipping deployment package for Lambda layer..."
            - cd ../sam-app/layers/cookie/nodejs
            - zip -r9 ../../../../lambda_zips/getUsernameLayer.zip .
            - cd ../../../../lambda_zips
            - cd ../sam-app/layers/text/nodejs
            - zip -r9 ../../../../lambda_zips/getTextLayer.zip .
            - cd ../../../../lambda_zips

    post_build:
        commands:
            - echo "Updating Lambda Functions..."
            - aws lambda update-function-code --function-name addNewAssociate --zip-file fileb://newAssociate.zip
            - aws lambda update-function-code --function-name createNewAppointment --zip-file fileb://newAppointment.zip
            - aws lambda update-function-code --function-name logAssociateIn --zip-file fileb://login.zip
            - aws lambda update-function-code --function-name retrieveAppointments --zip-file fileb://retrieveAppointments.zip
            - aws lambda update-function-code --function-name sendAppointmentReminders --zip-file fileb://sendAppointmentReminders.zip
            - aws lambda update-function-code --function-name isLoggedIn --zip-file fileb://isLoggedIn.zip
            - aws lambda update-function-code --function-name deleteAppointments --zip-file fileb://deleteAppointment.zip
            - aws lambda update-function-code --function-name retrieveAssociate --zip-file fileb://retrieveAssociate.zip
            - aws lambda publish-layer-version --layer-name getUsernameLayer --description "Shared Node.js get username layer" --zip-file fileb://getUsernameLayer.zip --compatible-runtimes nodejs18.x
            - aws lambda publish-layer-version --layer-name getTextLayer --description "Shared Node.js text layer" --zip-file fileb://getTextLayer.zip --compatible-runtimes nodejs18.x
            - echo "Setting environment variables for Lambda functions..."
            - aws lambda update-function-configuration --function-name addNewAssociate --environment "Variables={AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID},AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY},JWT_SECRET_KEY_VALUE=${JWT_SECRET_KEY_VALUE}}"
            - aws lambda update-function-configuration --function-name createNewAppointment --environment "Variables={AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID},AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY},JWT_SECRET_KEY_VALUE=${JWT_SECRET_KEY_VALUE}}"
            - aws lambda update-function-configuration --function-name logAssociateIn --environment "Variables={AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID},AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY},JWT_SECRET_KEY_VALUE=${JWT_SECRET_KEY_VALUE}}"
            - aws lambda update-function-configuration --function-name retrieveAppointments --environment "Variables={AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID},AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY},JWT_SECRET_KEY_VALUE=${JWT_SECRET_KEY_VALUE}}"
            - aws lambda update-function-configuration --function-name sendAppointmentReminders --environment "Variables={AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID},AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY},JWT_SECRET_KEY_VALUE=${JWT_SECRET_KEY_VALUE}}"
            - aws lambda update-function-configuration --function-name isLoggedIn --environment "Variables={AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID},AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY},JWT_SECRET_KEY_VALUE=${JWT_SECRET_KEY_VALUE}}"
            - aws lambda update-function-configuration --function-name deleteAppointments --environment "Variables={AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID},AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY},JWT_SECRET_KEY_VALUE=${JWT_SECRET_KEY_VALUE}}"
            - aws lambda update-function-configuration --function-name retrieveAssociate --environment "Variables={AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID},AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY},JWT_SECRET_KEY_VALUE=${JWT_SECRET_KEY_VALUE}}"
            - echo "DONE NOW!!"
