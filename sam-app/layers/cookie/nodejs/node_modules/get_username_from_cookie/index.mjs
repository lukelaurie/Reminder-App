import jwt from "jsonwebtoken";
import cookie from "cookie";

const JWT_SECRET_KEY = process.env.JWT_SECRET_KEY_VALUE;

export async function getUsernameFromCookie(event) {
    console.log("The event is");
    console.log(event);

    let cookieString;

    // Check if the cookie is present in event.headers.cookie
    if (event.headers && (event.headers.cookie || event.headers.Cookie)) {
        cookieString = event.headers.cookie || event.headers.Cookie;
    }

    // Check if the cookie is present in event.cookies
    if (!cookieString && event.cookies && event.cookies.length > 0) {
        cookieString = event.cookies.join('; ');
    }

    if (!cookieString) {
        throw new Error('No cookie was passed');
    }

    const cookies = cookie.parse(cookieString);

    const token = cookies.token;
    if (!token) {
        throw new Error('There is not a token associated with the cookie');
    }
    // verify that the token is valid
    const decoded = await new Promise((resolve, reject) => {
        jwt.verify(token, JWT_SECRET_KEY, (err, decodedToken) => {
            if (err) {
                console.log("there was an error getting the cookie");
                // the jwt check has failed
                reject(err);
            } else {
                // the jwt check was successful
                resolve(decodedToken);
            }
        });
    });
    return decoded.username;
}
