AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam first lambda

  Sample SAM Template for sam first lambda

  '
Globals:
  Api:
    Cors:
      AllowMethods: '''GET,POST,OPTIONS'''
      AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,Origin,Accept,Cookie'''
      AllowOrigin: '''http://localhost:5173'''
      AllowCredentials: true
  Function:
    Timeout: 60
Resources:
  SharedUsernameLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: get username layer
      Description: Shared Node.js get username layer
      ContentUri: ..\..\layers\cookie
      CompatibleRuntimes:
      - nodejs18.x
  SharedTextLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: text layer
      Description: Shared Node.js get text layer
      ContentUri: ..\..\layers\text
      CompatibleRuntimes:
      - nodejs18.x
  newAssociateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: newAssociateFunction
      Handler: index.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      Events:
        newAssociate:
          Type: Api
          Properties:
            Path: /addAssociate
            Method: post
    Metadata:
      SamResourceId: newAssociateFunction
  newAppointmentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: newAppointmentFunction
      Handler: index.lambdaHandler
      Runtime: nodejs18.x
      Layers:
      - Ref: SharedTextLayer
      - Ref: SharedUsernameLayer
      Environment:
        Variables:
          JWT_SECRET_KEY_VALUE: flj3289gnw89jnfgjnw33fn33dfs
          NODE_PATH: /opt/nodejs/
      Architectures:
      - x86_64
      Events:
        newAppointment:
          Type: Api
          Properties:
            Path: /createNewAppointment
            Method: post
    Metadata:
      SamResourceId: newAppointmentFunction
  loginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: loginFunction
      Handler: index.lambdaHandler
      Runtime: nodejs18.x
      Environment:
        Variables:
          JWT_SECRET_KEY_VALUE: flj3289gnw89jnfgjnw33fn33dfs
          NODE_PATH: /opt/nodejs/
      Architectures:
      - x86_64
      Events:
        Login:
          Type: Api
          Properties:
            Path: /login
            Method: post
    Metadata:
      SamResourceId: loginFunction
  retrieveAppointmentsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: retrieveAppointmentsFunction
      Handler: index.lambdaHandler
      Runtime: nodejs18.x
      Layers:
      - Ref: SharedUsernameLayer
      Environment:
        Variables:
          JWT_SECRET_KEY_VALUE: flj3289gnw89jnfgjnw33fn33dfs
          NODE_PATH: /opt/nodejs/
      Architectures:
      - x86_64
      Events:
        retrieveAppointments:
          Type: Api
          Properties:
            Path: /retrieveAppointments
            Method: post
    Metadata:
      SamResourceId: retrieveAppointmentsFunction
  sendAppointmentRemindersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: sendAppointmentRemindersFunction
      Handler: index.lambdaHandler
      Runtime: nodejs18.x
      Layers:
      - Ref: SharedTextLayer
      Environment:
        Variables:
          JWT_SECRET_KEY_VALUE: flj3289gnw89jnfgjnw33fn33dfs
          NODE_PATH: /opt/nodejs/
      Architectures:
      - x86_64
      Events:
        sendAppointmentReminders:
          Type: Api
          Properties:
            Path: /sendAppointmentReminders
            Method: post
    Metadata:
      SamResourceId: sendAppointmentRemindersFunction
  isLoggedInFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: isLoggedInFunction
      Handler: index.lambdaHandler
      Runtime: nodejs18.x
      Layers:
      - Ref: SharedUsernameLayer
      Environment:
        Variables:
          JWT_SECRET_KEY_VALUE: flj3289gnw89jnfgjnw33fn33dfs
          NODE_PATH: /opt/nodejs/
      Architectures:
      - x86_64
      Events:
        isLoggedIn:
          Type: Api
          Properties:
            Path: /isLoggedIn
            Method: get
    Metadata:
      SamResourceId: isLoggedInFunction
  deleteAppointmentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: deleteAppointmentFunction
      Handler: index.lambdaHandler
      Runtime: nodejs18.x
      Layers:
      - Ref: SharedUsernameLayer
      Environment:
        Variables:
          JWT_SECRET_KEY_VALUE: flj3289gnw89jnfgjnw33fn33dfs
          NODE_PATH: /opt/nodejs/
      Architectures:
      - x86_64
      Events:
        deleteAppointment:
          Type: Api
          Properties:
            Path: /deleteAppointment
            Method: post
    Metadata:
      SamResourceId: deleteAppointmentFunction
  retrieveAssociateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: retrieveAssociateFunction
      Handler: index.lambdaHandler
      Runtime: nodejs18.x
      Layers:
      - Ref: SharedUsernameLayer
      Environment:
        Variables:
          JWT_SECRET_KEY_VALUE: flj3289gnw89jnfgjnw33fn33dfs
          NODE_PATH: /opt/nodejs/
      Architectures:
      - x86_64
      Events:
        deleteAppointment:
          Type: Api
          Properties:
            Path: /retrieveAssociate
            Method: get
    Metadata:
      SamResourceId: retrieveAssociateFunction
